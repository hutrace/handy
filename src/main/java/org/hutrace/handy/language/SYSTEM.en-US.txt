serve.language.notfound = There is no '{}' attribute in the language package
serve.language.loadapp.errorname = File name error, format should be: XXX. Zh-cn. TXT (zh-cn for language, case-insensitive), error file: {}
serve.config.notfound = Config File not found, you need to add '{}' or a custom configuration file
serve.config.read = Read default {} config file: '{}'
serve.config.custom.notfound = The defined configuration file was not found: '{}'
serve.config.type.notfount = The corresponding configuration setter: '{}' was not found. The configuration file in '{}' format is supported
serve.config.scan.nothave = If you add the scan tag, you must add the corresponding string tag setting value
serve.config.scan.error = 'scan' property error, can only be an array or string
serve.config.type.error = Class loading error, class '{}' needs to implement '{}' interface
serve.config.method.error = No method '{}' was found under class '{}'
serve.config.method.parameter = Parameter type error, value can only be a simple type: '{}'#'{}'
serve.config.read.property = The property tag must contain either the value property or the bean/str subtag
serve.config.elem.disunion = Tag property error, the tag under the property must be unified.
serve.config.elem.nonsupport = Unsupported tag types.
serve.config.read.bean = Attribute '{}' has more than one tag. It should be a list or an array.
serve.config.cast.list = With the value tag you can only use an array to receive, not a list.
serve.mapping.scan.dao.nothave = You need to configure the CommonDao to use
serve.config.type.error = Type error, type can only be 'String' or 'JSONObject'ï¼Œ[{} -> index: {}]
serve.config.class.notfound = Class not found: '{}'
serve.config.class.error = Class new instance error: '{}'
serve.config.notimpl = This '{}' class must implement the '{}' interface
serve.config.pattern.notfound = No corresponding pattern was found: '{}'
serve.mapping.scan.start = Start scanning package ...
serve.mapping.scan.dao = Start scanning 'DAO' ...
serve.mapping.scan.service = Start scanning 'Service' ...
serve.mapping.scan.control = Start scanning 'Controller' ...
serve.mapping.scan.ws = Start scanning 'WebSocket' ...
serve.mapping.scan.finish = Scan complete, start initializing 'DAO', 'Service', 'Controller', 'WebSocket'
serve.mapping.debug.control = Controller interface information : 
serve.mapping.debug.ws = WebSocket interface information : 
serve.mapping.scan.dao.error = Class '{}' did not find the 'DAO' annotation
serve.mapping.scan.service.error = The scanned class '{}' must be annotated with 'DAO' and 'Service'
serve.mapping.scan.control.error = The scanned class '{}' must be annotated with 'Service'
serve.mapping.invoke.singleton = invoke [{}] -- singleton
serve.mapping.invoke.multiton = invoke [{}] -- multiton
serve.response.flushed = The channel has been flushed
serve.response.closed = The channel has been closed
serve.request.url = Request the address: {} [{}]
serve.request.data = {} request data: {}
serve.ws.request.url = WebSocket:  request event : {}
serve.ws.request.data = WebSocket: {} request data : {}
serve.ws.close = WebSocket: A client is disconnected, id: [{}]